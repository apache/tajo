/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// TajoClient -> TajoMaster Protocol
package tajo.client;

option java_package = "org.apache.tajo.ipc";
option java_outer_classname = "TajoMasterClientProtocol";
option java_generic_services = true;
option java_generate_equals_and_hash = true;

import "tajo_protos.proto";
import "TajoIdProtos.proto";
import "CatalogProtos.proto";
import "PrimitiveProtos.proto";
import "ClientProtos.proto";

service TajoMasterClientProtocolService {

  // Session APIs
  rpc createSession(CreateSessionRequest) returns (CreateSessionResponse);
  rpc removeSession(SessionIdProto) returns (ReturnState);
  rpc updateSessionVariables(UpdateSessionVariableRequest)
      returns (SessionUpdateResponse);
  rpc existSessionVariable(SessionedStringProto) returns (ReturnState);
  rpc getSessionVariable(SessionedStringProto) returns (StringResponse);
  rpc getAllSessionVariables(SessionIdProto) returns (KeyValueSetResponse);

  // Query Submission and Result APIs
  rpc submitQuery(QueryRequest) returns (SubmitQueryResponse);
  rpc updateQuery(QueryRequest) returns (UpdateQueryResponse);
  rpc getQueryResult(GetQueryResultRequest) returns (GetQueryResultResponse);
  rpc getQueryResultData(GetQueryResultDataRequest)
      returns (GetQueryResultDataResponse);

  // Query And Resource Management APIs
  rpc getQueryStatus(GetQueryStatusRequest) returns (GetQueryStatusResponse);
  rpc getRunningQueryList(SessionIdProto) returns (GetQueryListResponse);
  rpc getFinishedQueryList(SessionIdProto) returns (GetQueryListResponse);
  rpc killQuery(QueryIdRequest) returns (ReturnState);
  rpc getClusterInfo(GetClusterInfoRequest) returns (GetClusterInfoResponse);
  rpc closeNonForwardQuery(QueryIdRequest) returns (ReturnState);
  rpc getQueryInfo(QueryIdRequest) returns (GetQueryInfoResponse);

  // Database Management APIs
  rpc createDatabase(SessionedStringProto) returns (ReturnState);
  rpc existDatabase(SessionedStringProto) returns (ReturnState);
  rpc dropDatabase(SessionedStringProto) returns (ReturnState);
  rpc getAllDatabases(SessionIdProto) returns (StringListResponse);
  rpc getCurrentDatabase(SessionIdProto) returns (StringResponse);
  rpc selectDatabase(SessionedStringProto) returns (ReturnState);

  // Table Management APIs
  rpc createExternalTable(CreateTableRequest) returns (TableResponse);
  rpc existTable(SessionedStringProto) returns (ReturnState);
  rpc dropTable(DropTableRequest) returns (ReturnState);
  rpc getTableList(SessionedStringProto) returns (StringListResponse);
  rpc getTableDesc(SessionedStringProto) returns (TableResponse);
  rpc getFunctionList(SessionedStringProto) returns (FunctionListResponse);
  rpc getPartitionsByTableName(SessionedStringProto)
      returns (PartitionListResponse);

  // Index Management APIs
  rpc getIndexWithName(SessionedStringProto) returns (IndexResponse);
  rpc existIndexWithName(SessionedStringProto) returns (ReturnState);
  rpc getIndexesForTable(SessionedStringProto) returns (IndexListResponse);
  rpc existIndexesForTable(SessionedStringProto) returns (ReturnState);
  rpc getIndexWithColumns(GetIndexWithColumnsRequest) returns (IndexResponse);
  rpc existIndexWithColumns(GetIndexWithColumnsRequest) returns (ReturnState);
  rpc dropIndex(SessionedStringProto) returns (ReturnState);
}
