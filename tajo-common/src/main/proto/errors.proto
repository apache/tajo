/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package tajo.error;
option java_package = "org.apache.tajo.error";

import "stacktrace.proto";

enum ResultCode {
  OK                            = 0;

  // Warnings
  WARNING                       = 100;

  // General Errors
  UNKNOWN_ERROR                 = 200;
  INTERNAL_ERROR                = 201; // error caused by internal bugs
  NOT_IMPLEMENTED               = 202;
  ILLEGAL_STATE                 = 203;

  // Session Errors
  SESSION_INVALIDATION          = 251;
  NO_SUCH_SESSION_VARIABLE      = 252;

  // Query and Catalog Errors
  NO_SUCH_DATABASE              = 301;
  NO_SUCH_TABLE                 = 302;
  NO_SUCH_COLUMN                = 303;
  DATABASE_EXISTS               = 305;
  TABLE_EXISTS                  = 306;
  COLUMN_EXISTS                 = 307;

  // Physical Executor Errors
  INVALID_EXPRESSION            = 401;
  EXCEEDED_MEMORY               = 402;

   // underlying system errors based on errno.h.
  EPERM                         = 10001;  // Operation not permitted
  ENOENT                        = 10002;  // No such file or directory
  ESRCH                         = 10003;  // No such process
  EINTR                         = 10004;  // Interrupted system call
  EIO                           = 10005;  // I/O error
  ENXIO                         = 10006;  // No such device or address
  E2BIG                         = 10007;  // Argument list too long
  ENOEXEC                       = 10008;  // Exec format error
  EBADF                         = 10009;  // Bad file number
  ECHILD                        = 10010;  // No child processes
  EAGAIN                        = 10011;  // Try again
  ENOMEM                        = 10012;  // Out of memory
  EACCES                        = 10013;  // Permission denied
  EFAULT                        = 10014;  // Bad address
  ENOTBLK                       = 10015;  // Block device required
  EBUSY                         = 10016;  // Device or resource busy
  EEXIST                        = 10017;  // File exists
  EXDEV                         = 10018;  // Cross-device link
  ENODEV                        = 10019;  // No such device
  ENOTDIR                       = 10020;  // Not a directory
  EISDIR                        = 10021;  // Is a directory
  EINVAL                        = 10022;  // Invalid argument
  ENFILE                        = 10023;  // File table overflow
  EMFILE                        = 10024;  // Too many open files
  ENOTTY                        = 10025;  // Not a typewriter
  ETXTBSY                       = 10026;  // Text file busy
  EFBIG                         = 10027;  // File too large
  ENOSPC                        = 10028;  // No space left on device
  ESPIPE                        = 10029;  // Illegal seek
  EROFS                         = 10030;  // Read-only file system
  EMLINK                        = 10031;  // Too many links
  EPIPE                         = 10032;  // Broken pipe
  EDOM                          = 10033;  // Math argument out of domain of func
  ERANGE                        = 10034;  // Math result not representable
;
  EDEADLK                       = 10035;  // Resource deadlock would occur
  ENAMETOOLONG                  = 10036;  // File name too long
  ENOLCK                        = 10037;  // No record locks available
  ENOSYS                        = 10038;  // Function not implemented
  ENOTEMPTY                     = 10039;  // Directory not empty
  ELOOP                         = 10040;  // Too many symbolic links encountered
  // EWOULDBLOCK                = 100EAGAIN  // Operation would block
  ENOMSG                        = 10042;  // No message of desired type
  EIDRM                         = 10043;  // Identifier removed
  ECHRNG                        = 10044;  // Channel number out of range
  EL2NSYNC                      = 10045;  // Level 2 not synchronized
  EL3HLT                        = 10046;  // Level 3 halted
  EL3RST                        = 10047;  // Level 3 reset
  ELNRNG                        = 10048;  // Link number out of range
  EUNATCH                       = 10049;  // Protocol driver not attached
  ENOCSI                        = 10050;  // No CSI structure available
  EL2HLT                        = 10051;  // Level 2 halted
  EBADE                         = 10052;  // Invalid exchange
  EBADR                         = 10053;  // Invalid request descriptor
  EXFULL                        = 10054;  // Exchange full
  ENOANO                        = 10055;  // No anode
  EBADRQC                       = 10056;  // Invalid request code
  EBADSLT                       = 10057;  // Invalid slot
  // EDEADLOCK                  EDEADLK
  EBFONT                        = 10059;  // Bad font file format
  ENOSTR                        = 10060;  // Device not a stream
  ENODATA                       = 10061;  // No data available
  ETIME                         = 10062;  // Timer expired
  ENOSR                         = 10063;  // Out of streams resources
  ENONET                        = 10064;  // Machine is not on the network
  ENOPKG                        = 10065;  // Package not installed
  EREMOTE                       = 10066;  // Object is remote
  ENOLINK                       = 10067;  // Link has been severed
  EADV                          = 10068;  // Advertise error
  ESRMNT                        = 10069;  // Srmount error
  ECOMM                         = 10070;  // Communication error on send
  EPROTO                        = 10071;  // Protocol error
  EMULTIHOP                     = 10072;  // Multihop attempted
  EDOTDOT                       = 10073;  // RFS specific error
  EBADMSG                       = 10074;  // Not a data message
  EOVERFLOW                     = 10075;  // Value too large for defined data type
  ENOTUNIQ                      = 10076;  // Name not unique on network
  EBADFD                        = 10077;  // File descriptor in bad state
  EREMCHG                       = 10078;  // Remote address changed
  ELIBACC                       = 10079;  // Can not access a needed shared library
  ELIBBAD                       = 10080;  // Accessing a corrupted shared library
  ELIBSCN                       = 10081;  // .lib section in a.out corrupted
  ELIBMAX                       = 10082;  // Attempting to link in too many shared libraries
  ELIBEXEC                      = 10083;  // Cannot exec a shared library directly
  EILSEQ                        = 10084;  // Illegal byte sequence
  ERESTART                      = 10085;  // Interrupted system call should be restarted
  ESTRPIPE                      = 10086;  // Streams pipe error
  EUSERS                        = 10087;  // Too many users
  ENOTSOCK                      = 10088;  // Socket operation on non-socket
  EDESTADDRREQ                  = 10089;  // Destination address required
  EMSGSIZE                      = 10090;  // Message too long
  EPROTOTYPE                    = 10091;  // Protocol wrong type for socket
  ENOPROTOOPT                   = 10092;  // Protocol not available
  EPROTONOSUPPORT               = 10093;  // Protocol not supported
  ESOCKTNOSUPPORT               = 10094;  // Socket type not supported
  EOPNOTSUPP                    = 10095;  // Operation not supported on transport endpoint
  EPFNOSUPPORT                  = 10096;  // Protocol family not supported
  EAFNOSUPPORT                  = 10097;  // Address family not supported by protocol
  EADDRINUSE                    = 10098;  // Address already in use
  EADDRNOTAVAIL                 = 10099;  // Cannot assign requested address
  ENETDOWN                      = 10100; // Network is down
  ENETUNREACH                   = 10101; // Network is unreachable
  ENETRESET                     = 10102; // Network dropped connection because of reset
  ECONNABORTED                  = 10103; // Software caused connection abort
  ECONNRESET                    = 10104; // Connection reset by peer
  ENOBUFS                       = 10105; // No buffer space available
  EISCONN                       = 10106; // Transport endpoint is already connected
  ENOTCONN                      = 10107; // Transport endpoint is not connected
  ESHUTDOWN                     = 10108; // Cannot send after transport endpoint shutdown
  ETOOMANYREFS                  = 10109; // Too many references: cannot splice
  ETIMEDOUT                     = 10110; // Connection timed out
  ECONNREFUSED                  = 10111; // Connection refused
  EHOSTDOWN                     = 10112; // Host is down
  EHOSTUNREACH                  = 10113; // No route to host
  EALREADY                      = 10114; // Operation already in progress
  EINPROGRESS                   = 10115; // Operation now in progress
  ESTALE                        = 10116; // Stale NFS file handle
  EUCLEAN                       = 10117; // Structure needs cleaning
  ENOTNAM                       = 10118; // Not a XENIX named type file
  ENAVAIL                       = 10119; // No XENIX semaphores available
  EISNAM                        = 10120; // Is a named type file
  EREMOTEIO                     = 10121; // Remote I/O error
  EDQUOT                        = 10122; // Quota exceeded
  ENOMEDIUM                     = 10123; // No medium found
  EMEDIUMTYPE                   = 10124; // Wrong medium type
  ECANCELED                     = 10125; // Operation Canceled
  ENOKEY                        = 10126; // Required key not available
  EKEYEXPIRED                   = 10127; // Key has expired
  EKEYREVOKED                   = 10128; // Key has been revoked
  EKEYREJECTED                  = 10129; // Key was rejected by service

  // for robust mutexes
  EOWNERDEAD                    = 10130; // Owner died
  ENOTRECOVERABLE               = 10131; // State not recoverable
}

message SerializedException {
  required int64 timestamp         = 1;  // Microseconds since Epoch.
  required ResultCode return_code  = 2;
  required string message          = 3;

  optional StackTrace stack_trace  = 4;
}