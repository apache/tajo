explain
-------------------------------
PROJECTION(3)
  => Targets: 100.0 * ?sum_1 (FLOAT8) / ?sum_3 (FLOAT8) as promo_revenue
  => out schema: {(1) promo_revenue (FLOAT8)}
  => in  schema: {(2) ?sum_1 (FLOAT8), ?sum_3 (FLOAT8)}
   GROUP_BY(5)()
     => exprs: (sum(?casewhen (FLOAT8)),sum(?multiply_2 (FLOAT8)))
     => target list: ?sum_1 (FLOAT8), ?sum_3 (FLOAT8)
     => out schema:{(2) ?sum_1 (FLOAT8), ?sum_3 (FLOAT8)}
     => in schema:{(2) ?casewhen (FLOAT8), ?multiply_2 (FLOAT8)}
      JOIN(7)(INNER)
        => Join Cond: default.lineitem.l_partkey (INT4) = default.part.p_partkey (INT4)
        => target list: CASE WHEN default.part.p_type (TEXT)LIKE'PROMO%' THEN default.lineitem.l_extendedprice (FLOAT8) ELSE 0.0 END as ?casewhen, ?multiply_2 (FLOAT8)
        => out schema: {(2) ?casewhen (FLOAT8), ?multiply_2 (FLOAT8)}
        => in schema: {(5) ?multiply_2 (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4), default.part.p_partkey (INT4), default.part.p_type (TEXT)}
         SCAN(1) on default.part
           => target list: default.part.p_partkey (INT4), default.part.p_type (TEXT)
           => out schema: {(2) default.part.p_partkey (INT4), default.part.p_type (TEXT)}
           => in schema: {(9) default.part.p_brand (TEXT), default.part.p_comment (TEXT), default.part.p_container (TEXT), default.part.p_mfgr (TEXT), default.part.p_name (TEXT), default.part.p_partkey (INT4), default.part.p_retailprice (FLOAT8), default.part.p_size (INT4), default.part.p_type (TEXT)}
         SCAN(0) on default.lineitem
           => target list: default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4), default.lineitem.l_extendedprice (FLOAT8) * 1.0 - default.lineitem.l_discount (FLOAT8) as ?multiply_2
           => out schema: {(3) ?multiply_2 (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4)}
           => in schema: {(16) default.lineitem.l_comment (TEXT), default.lineitem.l_commitdate (TEXT), default.lineitem.l_discount (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_linenumber (INT4), default.lineitem.l_linestatus (TEXT), default.lineitem.l_orderkey (INT4), default.lineitem.l_partkey (INT4), default.lineitem.l_quantity (FLOAT8), default.lineitem.l_receiptdate (TEXT), default.lineitem.l_returnflag (TEXT), default.lineitem.l_shipdate (TEXT), default.lineitem.l_shipinstruct (TEXT), default.lineitem.l_shipmode (TEXT), default.lineitem.l_suppkey (INT4), default.lineitem.l_tax (FLOAT8)}
explain
-------------------------------
-------------------------------------------------------------------------------
Execution Block Graph (TERMINAL - eb_0000000000000_0000_000005)
-------------------------------------------------------------------------------
|-eb_0000000000000_0000_000005
   |-eb_0000000000000_0000_000004
      |-eb_0000000000000_0000_000003
         |-eb_0000000000000_0000_000002
         |-eb_0000000000000_0000_000001
-------------------------------------------------------------------------------
Order of Execution
-------------------------------------------------------------------------------
1: eb_0000000000000_0000_000001
2: eb_0000000000000_0000_000002
3: eb_0000000000000_0000_000003
4: eb_0000000000000_0000_000004
5: eb_0000000000000_0000_000005
-------------------------------------------------------------------------------

=======================================================
Block Id: eb_0000000000000_0000_000001 [LEAF]
=======================================================

[Outgoing]
[q_0000000000000_0000] 1 => 3 (type=HASH_SHUFFLE, key=default.lineitem.l_partkey (INT4), num=32)

SCAN(0) on default.lineitem
  => target list: default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4), default.lineitem.l_extendedprice (FLOAT8) * 1.0 - default.lineitem.l_discount (FLOAT8) as ?multiply_2
  => out schema: {(3) ?multiply_2 (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4)}
  => in schema: {(16) default.lineitem.l_comment (TEXT), default.lineitem.l_commitdate (TEXT), default.lineitem.l_discount (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_linenumber (INT4), default.lineitem.l_linestatus (TEXT), default.lineitem.l_orderkey (INT4), default.lineitem.l_partkey (INT4), default.lineitem.l_quantity (FLOAT8), default.lineitem.l_receiptdate (TEXT), default.lineitem.l_returnflag (TEXT), default.lineitem.l_shipdate (TEXT), default.lineitem.l_shipinstruct (TEXT), default.lineitem.l_shipmode (TEXT), default.lineitem.l_suppkey (INT4), default.lineitem.l_tax (FLOAT8)}

=======================================================
Block Id: eb_0000000000000_0000_000002 [LEAF]
=======================================================

[Outgoing]
[q_0000000000000_0000] 2 => 3 (type=HASH_SHUFFLE, key=default.part.p_partkey (INT4), num=32)

SCAN(1) on default.part
  => target list: default.part.p_partkey (INT4), default.part.p_type (TEXT)
  => out schema: {(2) default.part.p_partkey (INT4), default.part.p_type (TEXT)}
  => in schema: {(9) default.part.p_brand (TEXT), default.part.p_comment (TEXT), default.part.p_container (TEXT), default.part.p_mfgr (TEXT), default.part.p_name (TEXT), default.part.p_partkey (INT4), default.part.p_retailprice (FLOAT8), default.part.p_size (INT4), default.part.p_type (TEXT)}

=======================================================
Block Id: eb_0000000000000_0000_000003 [INTERMEDIATE]
=======================================================

[Incoming]
[q_0000000000000_0000] 1 => 3 (type=HASH_SHUFFLE, key=default.lineitem.l_partkey (INT4), num=32)
[q_0000000000000_0000] 2 => 3 (type=HASH_SHUFFLE, key=default.part.p_partkey (INT4), num=32)

[Outgoing]
[q_0000000000000_0000] 3 => 4 (type=HASH_SHUFFLE, key=, num=1)

GROUP_BY(11)()
  => exprs: (sum(?casewhen (FLOAT8)),sum(?multiply_2 (FLOAT8)))
  => target list: ?sum_6 (FLOAT8), ?sum_7 (FLOAT8)
  => out schema:{(2) ?sum_6 (FLOAT8), ?sum_7 (FLOAT8)}
  => in schema:{(2) ?casewhen (FLOAT8), ?multiply_2 (FLOAT8)}
   JOIN(7)(INNER)
     => Join Cond: default.lineitem.l_partkey (INT4) = default.part.p_partkey (INT4)
     => target list: CASE WHEN default.part.p_type (TEXT)LIKE'PROMO%' THEN default.lineitem.l_extendedprice (FLOAT8) ELSE 0.0 END as ?casewhen, ?multiply_2 (FLOAT8)
     => out schema: {(2) ?casewhen (FLOAT8), ?multiply_2 (FLOAT8)}
     => in schema: {(5) ?multiply_2 (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4), default.part.p_partkey (INT4), default.part.p_type (TEXT)}
      SCAN(10) on eb_0000000000000_0000_000002
        => out schema: {(2) default.part.p_partkey (INT4), default.part.p_type (TEXT)}
        => in schema: {(2) default.part.p_partkey (INT4), default.part.p_type (TEXT)}
      SCAN(9) on eb_0000000000000_0000_000001
        => out schema: {(3) ?multiply_2 (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4)}
        => in schema: {(3) ?multiply_2 (FLOAT8), default.lineitem.l_extendedprice (FLOAT8), default.lineitem.l_partkey (INT4)}

=======================================================
Block Id: eb_0000000000000_0000_000004 [ROOT]
=======================================================

[Incoming]
[q_0000000000000_0000] 3 => 4 (type=HASH_SHUFFLE, key=, num=1)

PROJECTION(3)
  => Targets: 100.0 * ?sum_1 (FLOAT8) / ?sum_3 (FLOAT8) as promo_revenue
  => out schema: {(1) promo_revenue (FLOAT8)}
  => in  schema: {(2) ?sum_1 (FLOAT8), ?sum_3 (FLOAT8)}
   GROUP_BY(5)()
     => exprs: (sum(?sum_6 (FLOAT8)),sum(?sum_7 (FLOAT8)))
     => target list: ?sum_1 (FLOAT8), ?sum_3 (FLOAT8)
     => out schema:{(2) ?sum_1 (FLOAT8), ?sum_3 (FLOAT8)}
     => in schema:{(2) ?sum_6 (FLOAT8), ?sum_7 (FLOAT8)}
      SCAN(12) on eb_0000000000000_0000_000003
        => out schema: {(2) ?sum_6 (FLOAT8), ?sum_7 (FLOAT8)}
        => in schema: {(2) ?sum_6 (FLOAT8), ?sum_7 (FLOAT8)}

=======================================================
Block Id: eb_0000000000000_0000_000005 [TERMINAL]
=======================================================
